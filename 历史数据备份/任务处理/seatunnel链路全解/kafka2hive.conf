
env {
  # You can set flink configuration here
  parallelism = 30
  job.mode = "STREAMING"
  checkpoint.interval = 30000
  #execution.checkpoint.interval = 10000
  #execution.checkpoint.data-uri = "hdfs://localhost:9000/checkpoint"
}

source {
  Kafka {
    result_table_name = "kafka_data"
    topic = "cdp-event-collect" 
    consumer.group = "Seatunnel-Hive"
    schema = {
      fields {
        accountId = "string"
        anonymousUser = "string"
        attributes = "map<string,string>"
        clientTime = "string"
        esId = "string"
        eventKey = "string"
        eventTime = "string"
        eventType = "string"
        locationLatitude = "string"
        locationLongitude = "string"
        packageName = "string"
        session = "string"
        userId = "string"
        userKey = "string"
      }
    }
    bootstrap.servers = "10.104.81.166:9092,10.104.81.176:9092,10.104.81.182:9092,10.104.81.175:9092,10.104.24.246:9092,10.104.24.244:9092"
    kafka.config = {
      auto.offset.reset = "latest"
      enable.auto.commit = "true"
    }
}
}


transform {
  Sql {
    source_table_name = "kafka_data"
    result_table_name = "hive_cdpevent"
    query = "select 
    accountId as project_id,
    eventKey as event_key,
    get_item(eventTime,'stm') as event_time,
    eventType as event_type,
    get_item(clientTime,'stm') as client_time,
    anonymousUser as anonymous_user,replace(userId,'\n','') as user,
    userKey as user_key,
    session,packageName as package,get_item(attributes,'$platform') as platform,
    get_item(attributes,'$referrer_domain') as referrer_domain,
    get_item(attributes,'$browser') as browser,
    get_item(attributes,'$browser_version') as browser_version,
    get_item(attributes,'$os') as os,
    get_item(attributes,'$os_version') as os_version,
    get_item(attributes,'$client_version') as client_version,
    get_item(attributes,'$channel') as channel,
    get_item(attributes,'$device_brand') as device_brand,
    get_item(attributes,'$device_model') as device_model,
    get_item(attributes,'$device_type') as device_type,
    get_item(attributes,'$device_orientation') as device_orientation,
    get_item(attributes,'$language') as language,
    accountId as account_id,
    get_item(attributes,'$domain') as domain,
    get_item(attributes,'$ip') as ip,
    get_item(attributes,'$user_agent') as user_agent,
    get_item(attributes,'$sdk_version') as sdk_version,
    locationLatitude as location_latitude,
    locationLongitude as location_longitude,
    get_item(attributes,'$data_source_id') as data_source_id,
    esId as esid,
    get_item(attributes,'attr') as attributes,
    get_item(eventTime,'dt') as dt,
    get_item(eventTime,'hour') as hour 
    from kafka_data"
  }
}

sink {
    Hive {
    table_name = "ham_jituan.seatunnel_cdpevent"
    metastore_uri = "thrift://master01:9083"
    hdfs_site_path = "/usr/local/seatunnel-2.3.3/config/hdfs-site.xml"
    hive_site_path = "/usr/local/seatunnel-2.3.3/config/hive-site.xml"
    source_table_name = "hive_cdpevent"
  }
}