insert overwrite table ham.dwd_dcslog_event_gio_di partition (dt = '${DT}', hour = '${HH}')
select 
coalesce(case when regexp(user, '^[0-9]{11}$') then user when regexp(user, '.*==$') then aes_function(user) end, first_value(case when regexp(user, '^[0-9]{11}$') then user when regexp(user, '.*==$') then aes_function(user) end)
                  OVER (PARTITION BY anonymous_user
                      ORDER BY event_time ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),'') AS mobile,
anonymous_user AS ck_id,
session AS ss_id,
ip,
parse_ip(ip).prov as ip_prov,
parse_ip(ip).city as ip_city,
attributes['$reffer'] as referer,
decode_url(attributes['WT_event']) AS event,
decode_url(coalesce(split(attributes['WT_es'],'\\?')[0],if(instr(domain,'.')>0,if(regexp(domain,'^[0-9]+[.]+[0-9]+[.]+[0-9]+[.]+[0-9]+$'),concat('http://',coalesce(domain,''),coalesce(attributes['$path'],'')),concat('https://',coalesce(domain,''),coalesce(attributes['$path'],''))),domain))) as url,
decode_url(decode_url(attributes['WT_si_n'])) AS si_n,
decode_url(attributes['WT_si_s']) AS si_s,
decode_url(attributes['WT_si_x']) AS si_x,
decode_url(nvl(nullif(split(attributes['WT_channelid'],'%')[0], ''),nullif(substr(regexp_extract(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1]), 'channelId=([0-9a-zA-z]+)', 1),0,12),''))) AS channel_id,
decode_url(substr(nvl(nullif(attributes['WT_pageid'], ''), nullif(regexp_extract(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1]), 'pageId=([0-9a-zA-z]+)', 1),'')), 0, 19)) AS page_id,
decode_url(attributes['WT_input_xm']) AS input_xm,
decode_url(attributes['WT_input_sfz']) AS input_sfz,
decode_url(attributes['WT_input_dz']) AS input_dz,
decode_url(attributes['WT_mc_ev']) AS mc_ev,
decode_url(nvl(nullif(attributes['WT_sellerid'], ''), nullif(regexp_extract(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1]), 'sellerId=([0-9a-zA-z]+)', 1),''))) AS seller_id,
attributes['WT_last_pageid'] AS last_pageid,
attributes['WT_module_no'] AS module_no,
decode_url(attributes['WT_point_position']) AS point_position,
decode_url(attributes['WT_member']) AS member,
decode_url(attributes['WT_goods_no']) AS goods_no,
attributes['WT_login_status'] AS login_status,
decode_url(attributes['WT_input_dq']) AS input_dq,
decode_url(attributes['WT_input_buymobile']) AS input_buymobile,
date_format(event_time,'yyyy-MM-dd HH:mm:ss') as daytime,
concat(unix_timestamp(client_time, 'yyyy-MM-dd HH:mm:ss.SSS'),split(client_time,'\\.')[1]) as cli_time,
attributes['WT_last_url'] AS last_url,
decode_url(attributes['WT_last_pagename']) AS last_pagename,
attributes['WT_current_url'] AS current_url,
decode_url(attributes['WT_current_pagename']) AS current_pagename,
decode_url(attributes['WT_module_name']) AS module_name,
attributes['WT_next_pageid'] AS next_pageid,
decode_url(attributes['WT_next_url']) AS next_url,
decode_url(attributes['WT_next_pagename']) AS next_pagename,
attributes['WT_component_id'] AS component_id,
decode_url(attributes['WT_input_mobile']) as input_mobile,
attributes['WT_touchcode'] AS touchcode,
attributes['WT_tpl'] AS tpl,
decode_url(attributes['WT_branch']) as branch,
decode_url(concat(if(instr(domain,'.')>0,if(regexp(domain,'^[0-9]+[.]+[0-9]+[.]+[0-9]+[.]+[0-9]+$'),concat('http://',coalesce(domain,''),coalesce(attributes['$path'],'')),concat('https://',coalesce(domain,''),coalesce(attributes['$path'],''))),domain),coalesce(concat('?',attributes['$attributes']),''))) as complete_url,
attributes['WT_point_name'] AS point_name,
attributes['WT_component_name'] AS component_name,
attributes['WT_environment'] AS environment,
decode_url(attributes['WT_plat']) AS plat,
attributes['WT_sku_id'] AS sku_id,
decode_url(attributes['WT_prepare1']) as prepare1,
decode_url(attributes['WT_event_type']) AS event_type,
decode_url(attributes['WT_envName']) AS envName,
decode_url(attributes['WT_errCode']) AS errCode,
decode_url(attributes['WT_errMsg']) AS errMsg,
decode_url(attributes['WT_prov']) AS prov,
decode_url(attributes['WT_city']) AS city,
decode_url(attributes['WT_mc_ev_name']) AS mc_ev_name,
data_source_id as trmnl_style,
'--' AS tbd,
concat(unix_timestamp(client_time, 'yyyy-MM-dd HH:mm:ss.SSS'),split(client_time,'\\.')[1]) AS dcsdat,
decode_url(coalesce(user_agent,'')) as user_agent,
attributes['WT_goods_id'] AS goods_id,
regexp_replace(resolution,'\\*','x') as sr,
attributes['WT_appId'] AS appid,
decode_url(attributes['WT_cid']) as cid,
decode_url(attributes['WT_userBrand']) as userbrand,
decode_url(attributes['WT_loginProvince']) as loginprovince,
decode_url(attributes['WT_loginCity']) as logincity,
attributes['WT_nodeId'] as nodeid,
attributes['WT_tv'] as tv,
attributes['WT_vt_f_tlh'] as vt_f_tlh,
'--' as vtvs,
'--' as mark33,
attributes['$path'] as dcsuri,
decode_url(coalesce(attributes['WT_ti'],attributes['$title'])) as wt_ti,
coalesce(attributes['WT_et'],event_key) as et,--先取开发上传WT_et再取event_key
attributes['WT_markId'] as markid,
attributes['WT_serial_no'] as serial_no,
attributes['WT_act_str_step_id'] as act_str_step_id,
attributes['WT_group_id'] as group_id,
attributes['WT_mr_id'] as mr_id,
attributes['WT_ad_step'] as ad_step,
attributes['WT_touch_tm'] as touch_tm,
attributes['$duration'] as ed,
decode_url(extract_xy(attributes_str)) as xy,
decode_url(attributes['WT_vt_sid']) as vt_sid, 
decode_url(coalesce(attributes['WT_es'],concat(if(instr(domain,'.')>0,if(regexp(domain,'^[0-9]+[.]+[0-9]+[.]+[0-9]+[.]+[0-9]+$'),concat('http://',coalesce(domain,''),coalesce(attributes['$path'],'')),concat('https://',coalesce(domain,''),coalesce(attributes['$path'],''))),domain),coalesce(concat('?',attributes['$query']),'')))) as es,
decode_url(attributes['WT_sellerid']) AS wtsellerid,
decode_url(attributes['WT_channelid']) as wtchannelid,
decode_url(attributes['WT_pageid']) as wtpageid,
event_id,
user_key,
domain,
device_model,
sdk_version,
location_latitude,
location_longitude,
platform,
os_version,
gio_id,
attributes_str as attributes,
decode_url(attributes['WT_goods_specs']) as wt_goods_specs,
decode_url(attributes['WT_goods_price']) as wt_goods_price
from (
select 
project_id,
event_key,
event_time,
event_id,
event_type,
client_time,
anonymous_user,
user,
user_key,
gio_id,
merged_gio_id,
session,
str_to_map(regexp_replace(regexp_replace(decode_url(attributes),'\\n+|\\r+|(\\n\\r)+|\\t+|\\|', ''), '^\\{"(.*)"\\}$', '$1'),'\",\"','\":\"') as attributes,
regexp_replace(decode_url(attributes),'\\n+|\\r+|(\\n\\r)+|\\t+|\\|', '') as attributes_str,
package,
platform,
referrer_domain,
utm_source,
utm_medium,
utm_campaign,
utm_term,
utm_content,
traffic_source,
ads_id,
key_word,
country_code,
country_name,
region,
city,
browser,
browser_version,
os,
os_version,
client_version,
channel,
device_brand,
device_model,
device_type,
device_orientation,
resolution,
language,
referrer_type,
account_id,
domain,
ip,
user_agent,
sdk_version,
location_latitude,
location_longitude,
bot_id,
data_source_id,
esid,
dt,
hour
from ham.ods_dcslog_event_gio_all
where dt = '${DT}'
and hour = '${HH}'
and data_source_id in ('aa410d5cd21666f5','a1307114a76cd375','a6381779603b656a','913e6dc4915d470c','8643086d472dea68','82213179b9aea392','aba9de4ce446b2d2','ac81a55cdf7074d5')
) tb1
;

--51006接口数据融通
insert into table ham.dwd_dcslog_event_gio_di partition (dt = '${DT}', hour = '${HH}')
select 
coalesce(case when regexp(user, '^[0-9]{11}$') then user when regexp(user, '.*==$') then aes_function(user) end, first_value(case when regexp(user, '^[0-9]{11}$') then user when regexp(user, '.*==$') then aes_function(user) end)
                  OVER (PARTITION BY anonymous_user
                      ORDER BY event_time ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING),'') AS mobile,
anonymous_user AS ck_id,
session AS ss_id,
ip,
parse_ip(ip).prov as ip_prov,
parse_ip(ip).city as ip_city,
attributes['$reffer'] as referer,
decode_url(attributes['WT_event']) AS event,
decode_url(coalesce(split(attributes['WT_es'],'\\?')[0],if(instr(domain,'.')>0,if(regexp(domain,'^[0-9]+[.]+[0-9]+[.]+[0-9]+[.]+[0-9]+$'),concat('http://',coalesce(domain,''),coalesce(attributes['$path'],'')),concat('https://',coalesce(domain,''),coalesce(attributes['$path'],''))),domain))) as url,
decode_url(decode_url(attributes['WT_si_n'])) AS si_n,
decode_url(attributes['WT_si_s']) AS si_s,
decode_url(attributes['WT_si_x']) AS si_x,
decode_url(nvl(nullif(split(attributes['WT_channelid'],'%')[0], ''),nullif(substr(regexp_extract(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1]), 'channelId=([0-9a-zA-z]+)', 1),0,12),''))) AS channel_id,
decode_url(substr(nvl(nullif(attributes['WT_pageid'], ''), nullif(regexp_extract(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1]), 'pageId=([0-9a-zA-z]+)', 1),'')), 0, 19)) AS page_id,
decode_url(attributes['WT_input_xm']) AS input_xm,
decode_url(attributes['WT_input_sfz']) AS input_sfz,
decode_url(attributes['WT_input_dz']) AS input_dz,
decode_url(attributes['WT_mc_ev']) AS mc_ev,
decode_url(nvl(nullif(attributes['WT_sellerid'], ''), nullif(regexp_extract(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1]), 'sellerId=([0-9a-zA-z]+)', 1),''))) AS seller_id,
attributes['WT_last_pageid'] AS last_pageid,
attributes['WT_module_no'] AS module_no,
decode_url(attributes['WT_point_position']) AS point_position,
decode_url(attributes['WT_member']) AS member,
decode_url(attributes['WT_goods_no']) AS goods_no,
attributes['WT_login_status'] AS login_status,
decode_url(attributes['WT_input_dq']) AS input_dq,
decode_url(attributes['WT_input_buymobile']) AS input_buymobile,
date_format(event_time,'yyyy-MM-dd HH:mm:ss') as daytime,
concat(unix_timestamp(client_time, 'yyyy-MM-dd HH:mm:ss.SSS'),split(client_time,'\\.')[1]) as cli_time,
attributes['WT_last_url'] AS last_url,
decode_url(attributes['WT_last_pagename']) AS last_pagename,
attributes['WT_current_url'] AS current_url,
decode_url(attributes['WT_current_pagename']) AS current_pagename,
decode_url(attributes['WT_module_name']) AS module_name,
attributes['WT_next_pageid'] AS next_pageid,
decode_url(attributes['WT_next_url']) AS next_url,
decode_url(attributes['WT_next_pagename']) AS next_pagename,
attributes['WT_component_id'] AS component_id,
decode_url(attributes['WT_input_mobile']) as input_mobile,
attributes['WT_touchcode'] AS touchcode,
attributes['WT_tpl'] AS tpl,
decode_url(attributes['WT_branch']) as branch,
decode_url(concat(if(instr(domain,'.')>0,if(regexp(domain,'^[0-9]+[.]+[0-9]+[.]+[0-9]+[.]+[0-9]+$'),concat('http://',coalesce(domain,''),coalesce(attributes['$path'],'')),concat('https://',coalesce(domain,''),coalesce(attributes['$path'],''))),domain),coalesce(concat('?',attributes['$attributes']),''))) as complete_url,
attributes['WT_point_name'] AS point_name,
attributes['WT_component_name'] AS component_name,
attributes['WT_environment'] AS environment,
decode_url(attributes['WT_plat']) AS plat,
attributes['WT_sku_id'] AS sku_id,
decode_url(attributes['WT_prepare1']) as prepare1,
decode_url(attributes['WT_event_type']) AS event_type,
decode_url(attributes['WT_envName']) AS envName,
decode_url(attributes['WT_errCode']) AS errCode,
decode_url(attributes['WT_errMsg']) AS errMsg,
decode_url(attributes['WT_prov']) AS prov,
decode_url(attributes['WT_city']) AS city,
decode_url(attributes['WT_mc_ev_name']) AS mc_ev_name,
data_source_id as trmnl_style,
'--' AS tbd,
concat(unix_timestamp(client_time, 'yyyy-MM-dd HH:mm:ss.SSS'),split(client_time,'\\.')[1]) AS dcsdat,
decode_url(coalesce(user_agent,'')) as user_agent,
attributes['WT_goods_id'] AS goods_id,
regexp_replace(resolution,'\\*','x') as sr,
attributes['WT_appId'] AS appid,
decode_url(attributes['WT_cid']) as cid,
decode_url(attributes['WT_userBrand']) as userbrand,
decode_url(attributes['WT_loginProvince']) as loginprovince,
decode_url(attributes['WT_loginCity']) as logincity,
attributes['WT_nodeId'] as nodeid,
attributes['WT_tv'] as tv,
attributes['WT_vt_f_tlh'] as vt_f_tlh,
'--' as vtvs,
'--' as mark33,
attributes['$path'] as dcsuri,
decode_url(coalesce(attributes['WT_ti'],attributes['$title'])) as wt_ti,
coalesce(attributes['WT_et'],event_key) as et,--先取开发上传WT_et再取event_key
attributes['WT_markId'] as markid,
attributes['WT_serial_no'] as serial_no,
attributes['WT_act_str_step_id'] as act_str_step_id,
attributes['WT_group_id'] as group_id,
attributes['WT_mr_id'] as mr_id,
attributes['WT_ad_step'] as ad_step,
attributes['WT_touch_tm'] as touch_tm,
attributes['$duration'] as ed,
decode_url(extract_xy(attributes_str)) as xy,
decode_url(attributes['WT_vt_sid']) as vt_sid, 
decode_url(coalesce(attributes['WT_es'],concat(if(instr(domain,'.')>0,if(regexp(domain,'^[0-9]+[.]+[0-9]+[.]+[0-9]+[.]+[0-9]+$'),concat('http://',coalesce(domain,''),coalesce(attributes['$path'],'')),concat('https://',coalesce(domain,''),coalesce(attributes['$path'],''))),domain),coalesce(concat('?',attributes['$query']),'')))) as es,
decode_url(attributes['WT_sellerid']) AS wtsellerid,
decode_url(split(cast(coalesce(attributes['WT_channelid'],'') as string),'%')[1]) as wtchannelid,
decode_url(attributes['WT_pageid']) as wtpageid,
event_id,
user_key,
domain,
device_model,
sdk_version,
location_latitude,
location_longitude,
platform,
os_version,
gio_id,
attributes_str as attributes,
decode_url(attributes['WT_goods_specs']) as wt_goods_specs,
decode_url(attributes['WT_goods_price']) as wt_goods_price
from (
select
tb2.project_id as project_id,
tb2.event_key as event_key,
tb2.event_time as event_time,
tb2.event_id as event_id,
tb2.event_type as event_type,
tb2.client_time as client_time,
tb2.anonymous_user as anonymous_user,
tb2.user as user,
tb2.user_key as user_key,
tb2.gio_id as gio_id,
tb2.merged_gio_id as merged_gio_id,
tb2.session as session,
tb2.attributes as attributes,
tb2.attributes_str as attributes_str,
tb2.package as package,
tb2.platform as platform,
tb2.referrer_domain as referrer_domain,
tb2.utm_source as utm_source,
tb2.utm_medium as utm_medium,
tb2.utm_campaign as utm_campaign,
tb2.utm_term as utm_term,
tb2.utm_content as utm_content,
tb2.traffic_source as traffic_source,
tb2.ads_id as ads_id,
tb2.key_word as key_word,
tb2.country_code as country_code,
tb2.country_name as country_name,
tb2.region as region,
tb2.city as city,
tb2.browser as browser,
tb2.browser_version as browser_version,
tb2.os as os,
tb2.os_version as os_version,
tb2.client_version as client_version,
tb2.channel as channel,
tb2.device_brand as device_brand,
tb2.device_model as device_model,
tb2.device_type as device_type,
tb2.device_orientation as device_orientation,
tb2.resolution as resolution,
tb2.language as language,
tb2.referrer_type as referrer_type,
tb2.account_id as account_id,
tb2.domain as domain,
tb2.ip as ip,
tb2.user_agent as user_agent,
tb2.sdk_version as sdk_version,
tb2.location_latitude as location_latitude,
tb2.location_longitude as location_longitude,
tb2.bot_id as bot_id,
tb2.data_source_id as data_source_id,
tb2.esid as esid,
tb2.dt as dt,
tb2.hour as hour
from (
select 
project_id,
event_key,
event_time,
event_id,
event_type,
client_time,
anonymous_user,
user,
user_key,
gio_id,
merged_gio_id,
session,
str_to_map(regexp_replace(regexp_replace(decode_url(attributes),'\\n+|\\r+|(\\n\\r)+|\\t+|\\|', ''), '^\\{"(.*)"\\}$', '$1'),'\",\"','\":\"') as attributes,
regexp_replace(decode_url(attributes),'\\n+|\\r+|(\\n\\r)+|\\t+|\\|', '') as attributes_str,
package,
platform,
referrer_domain,
utm_source,
utm_medium,
utm_campaign,
utm_term,
utm_content,
traffic_source,
ads_id,
key_word,
country_code,
country_name,
region,
city,
browser,
browser_version,
os,
os_version,
client_version,
channel,
device_brand,
device_model,
device_type,
device_orientation,
resolution,
language,
referrer_type,
account_id,
domain,
ip,
user_agent,
sdk_version,
location_latitude,
location_longitude,
bot_id,
data_source_id,
esid,
dt,
hour
from ham_jituan.ods_client_event_gio_all
where dt = '${DT}'
and hour = '${HH}'
and data_source_id in ('a1f48d9ff4f42571','b508a809cbbddd0b')
)tb2
where 1=1
and attributes['WT_av'] is null 
and event_type = 'custom_event'
-- and (
-- instr(attributes['WT_mc_ev'],'QYCS')<0 
-- or attributes['WT_mc_ev'] is null
-- --or (domain = 'dev.coc.10086.cn' and attributes['WT_environment'] = 'production' and attributes['$path'] like '/coc3/canvas/rightsmarket-h5-canvas%')
-- or (attributes['WT_environment'] = 'production' 
-- and attributes['WT_es'] like 'https://dev.coc.10086.cn/coc3/canvas/rightsmarket-h5-canvas%')
-- )
) tb1
;
