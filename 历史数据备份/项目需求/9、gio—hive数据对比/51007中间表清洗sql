insert overwrite table ham_jituan.dwd_client_event_gio_di PARTITION(dt='${DT}',hour='${HH}')
select
date_format(event_time,'yyyy-MM-dd HH:mm:ss') as date_time,
tb1.ip as c_ip,
tb1.domain as cs_host,
decode_url(attributes['WT_cid']) as wt_cid,
anonymous_user as wt_co_f,
attributes['WT_city'] as wt_city,
case when regexp(user,'^1[3-9]\\d{9}$') then user when regexp(user,'.*==$') then aes_function(user) end as wt_mobile,
decode_url(attributes['WT_event']) as wt_event,
decode_url(coalesce(attributes['WT_ti'],attributes['$title'])) as wt_ti,
coalesce(case when attributes['$query'] is not null then str_to_map(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1]), '&', '=')['WT.mc_id'] end,attributes['WT_mc_id']) as wt_mc_id,
attributes['WT_ac'] as wt_ac,
coalesce(attributes['WT_ac_id'],case when attributes['$query'] is not null then coalesce(str_to_map(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1]), '&', '=')['wt.ac_id'],str_to_map(attributes['$query'], '&', '=')['WT.ac_id']) end) as wt_ac_id,
attributes['WT_goods_id'] as goods_id,
attributes['WT_sku_id'] as sku_id,
decode_url(attributes['$reffer']) as cs_referer,
coalesce(attributes['WT_es'],concat(if(instr(domain,'.')>0,if(regexp(domain,'^[0-9]+[.]+[0-9]+[.]+[0-9]+[.]+[0-9]+$'),concat('http://',coalesce(domain,''),coalesce(attributes['$path'],'')),concat('https://',coalesce(domain,''),coalesce(attributes['$path'],''))),domain),coalesce(concat('?',attributes['$query']),''))) as wt_es,
attributes['WT_adverType'] as advertype,
decode_url(attributes['WT_areaName']) as wt_areaname,
attributes['WT_markId'] as mark_id,
data_source_id AS trmnl_style,
CASE WHEN attributes['WT_aav'] is null AND attributes['WT_av'] is not null THEN if(instr(split(cast(attributes['WT_av'] AS string),'_')[2], 'v') = 1 , CASE WHEN attributes['WT_av'] is null THEN '' else regexp_replace(split( cast(attributes['WT_av'] AS string),'_')[2], 'v', '') end, split(cast(attributes['WT_av'] AS string),'_')[2]) ELSE attributes['WT_aav'] END AS wt_aav,
CASE WHEN decode_url(attributes['WT_event']) = 'sdk_loaded' AND data_source_id = 'b508a809cbbddd0b' THEN concat('APP_ios_v',attributes['WT_av'])
WHEN decode_url(attributes['WT_event']) = 'sdk_loaded' THEN regexp_replace(attributes['WT_av'],'APP_Android_','APP_android_')  
ELSE attributes['WT_av'] END  AS wt_av,
date_format(event_time,'yyyyMMdd') as date_day,
decode_url(attributes['WT_prov_name']) as prov_name,
date_format(client_time,'yyyy-MM-dd HH:mm:ss') as click_time,
attributes['WT_prov'] as wt_prov,
nullif(substr(regexp_extract(decode_url(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1])), 'channelId=([0-9a-zA-z]+)', 1),0,12),'') as channelid,
attributes['WT_plat'] as plat,
decode_url(attributes['WT_si_x']) as si_x,
decode_url(attributes['WT_si_n']) as si_n,
decode_url(attributes['WT_si_s']) as si_s,
attributes['WT_goods_id'] as wt_goods_id,
attributes['WT_sku_id'] as wt_sku_id,
attributes['WT_prepare1'] AS prepare1,
attributes['WT_cmd'] as cmd,
os as os,
attributes['WT_dm'] as dm,
attributes['WT_clientID'] as clientid,
substr(nullif(regexp_extract(decode_url(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1])), 'pageId=([0-9a-zA-z]+)', 1),''), 0, 19) as  pageid,
regexp_extract(decode_url(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1])), 'sellerId=([0-9-a-zA-z]+)',1) as sellerid,
session AS ss_id,
regexp_extract(decode_url(coalesce(attributes['$query'],parse_url(attributes['WT_es'], 'QUERY'),split(attributes['WT_es'],'\\?')[1])), 'extendId=([0-9-a-zA-z+-]+)',1) as extendid,
attributes['WT_channelid'] as wt_channel_id,
attributes['WT_pageid'] as wt_page_id,
attributes['WT_sellerid'] as wt_seller_id,
attributes['WT_extendid'] as wt_extend_id,
regexp_replace(user_agent,'\\|','_') as user_agent,
coalesce(attributes['WT_et'],event_key) as et,
decode_url(attributes['WT_next_url']) as next_url,
decode_url(attributes['WT_envName']) as envname,
os_version as sv,
attributes['WT_carrierOperator'] as carrieroperator,
decode_url(attributes['WT_a_dc']) as a_dc,
attributes['WT_ct'] as ct,
regexp_replace(resolution,'\\*','x') as sr,
attributes['WT_vt_sid'] as vt_sid,
decode_url(attributes['WT_userBrand']) as userbrand,
attributes['WT_loginProvince'] as loginprovince,
attributes['WT_loginCity'] as logincity,
attributes['WT_appId'] as appid,
attributes['WT_channel'] as channel,
attributes['WT_dcsref'] as dcsref,
attributes['WT_ed'] as ed,
attributes['WT_errCode'] as errcode,
decode_url(attributes['WT_errMsg']) as errmsg,
attributes['WT_serial_no'] as serial_no,
attributes['WT_act_str_step_id'] as act_str_step_id,
attributes['WT_group_id'] as group_id,
attributes['WT_mr_id'] as mr_id,
attributes['WT_ad_step'] as ad_step,
attributes['WT_touch_tm'] as touch_tm,
decode_url(attributes['WT_appqry']) as appqry,
decode_url(extract_xy(attributes_str)) as xy,--需要自定义函数处理
decode_url(attributes['WT_sid']) as sid,
concat(unix_timestamp(client_time, 'yyyy-MM-dd HH:mm:ss.SSS'),split(client_time,'\\.')[1]) as dcsdat,
event_id,
event_type,
user_key,
domain,
device_model,
sdk_version,
location_latitude,
location_longitude,
platform,
os_version,
gio_id,
case when attributes_str = '{}' then '' else attributes_str end as attributes,--attributes类型需要改变
'',
''
from(
select 
project_id,
event_key,
event_time,
event_id,
event_type,
client_time,
anonymous_user,
user,
user_key,
gio_id,
merged_gio_id,
session,
str_to_map(regexp_replace(regexp_replace(decode_url(attributes),'\\n+|\\r+|(\\n\\r)+|\\t+|\\|', ''), '^\\{"(.*)"\\}$', '$1'),'\",\"','\":\"') as attributes,
regexp_replace(decode_url(attributes),'\\n+|\\r+|(\\n\\r)+|\\t+|\\|', '') as attributes_str,
package,
platform,
referrer_domain,
utm_source,
utm_medium,
utm_campaign,
utm_term,
utm_content,
traffic_source,
ads_id,
key_word,
country_code,
country_name,
region,
city,
browser,
browser_version,
os,
os_version,
client_version,
channel,
device_brand,
device_model,
device_type,
device_orientation,
resolution,
language,
referrer_type,
account_id,
domain,
ip,
user_agent,
sdk_version,
location_latitude,
location_longitude,
bot_id,
data_source_id,
esid,
dt,
hour
from ham_jituan.ods_client_event_gio_all
where dt = '${DT}'
and hour = '${HH}'
) tb1
;